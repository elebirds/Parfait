plugins {
    id 'java'
    id 'application'
    id 'org.jetbrains.kotlin.jvm' version '1.7.20'
    id 'org.openjfx.javafxplugin' version '0.0.13'
    id 'org.beryx.jlink' version '2.25.0'
}

group 'cc.eleb.parfait'
version '1.0.0'

repositories {
    mavenLocal()
    maven { url "https://maven.aliyun.com/nexus/content/groups/public/"}
    mavenCentral()
    jcenter()
}

sourceSets {
    main.java.srcDirs = ['src/main/kotlin']
    main.kotlin.srcDirs = ['src/main/kotlin']
    main.resources.srcDirs = ['src/main/resources']
}

ext {
    junitVersion = '5.8.2'
}

sourceCompatibility = '11'
targetCompatibility = '11'

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

application {
    mainModule = 'cc.eleb.parfait'
    mainClass = 'cc.eleb.parfait.ParfaitMain'
}

[compileKotlin, compileTestKotlin].forEach {
    it.kotlinOptions {
        jvmTarget = '11'
    }
}

dependencies {
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.4")//协程
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core-jvm:1.6.4")

    implementation('com.formdev:flatlaf:3.0')
    implementation('com.formdev:flatlaf-extras:3.0')
    implementation("com.formdev:flatlaf-fonts-jetbrains-mono:2.242")
    implementation("com.formdev:flatlaf-fonts-roboto:2.137")
    implementation("com.formdev:flatlaf-fonts-roboto-mono:3.000")
    implementation("com.formdev:flatlaf-fonts-inter:3.19")
    implementation("com.miglayout:miglayout-swing:5.3")
    implementation("com.jgoodies:jgoodies-forms:1.9.0")

    implementation('com.google.code.gson:gson:2.8.9')
    implementation('commons-io:commons-io:2.7')
    implementation( "com.moandjiezana.toml:toml4j:0.7.2" )
    implementation('org.yaml:snakeyaml:2.0')

    implementation("com.belerweb:pinyin4j:2.5.1")//拼音英文转换
    implementation("com.alibaba:easyexcel:3.2.1")//excel操作
}

jar {
    archiveFileName = "Parfait.jar"
    manifest {
        attributes(
                "Main-Class": "cc.eleb.parfait.ParfaitMainKt"
        )
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    duplicatesStrategy = 'include'
    zip64(true)
}
